name: MSBuild

on: [workflow_dispatch, push]

defaults:
  run:
    shell: wsl-bash {0}

jobs:
  build:
    runs-on: windows-latest

    steps:

    - uses: Vampire/setup-wsl@v1
      with:
        distribution: Ubuntu-20.04

    - name: Install vcpkg dependencies
      shell: pwsh
      run: |
        Install-Module VSSetup -Scope CurrentUser -Force
        vcpkg.exe install icu openssl
        vcpkg.exe integrate install
        

    - name: find m4
      run: |
          export PYTHON="/mnt/c/Program\ Files\Python\ 3.7\python3.exe"
          export AC_MACRODIR=${{ github.workspace }}/build/autoconf/
          export CC_TYPE=clang
          export CC="/mnt/c/Program\ Files/LLVM/bin/clang.exe"
          export CLANG_CC="/mnt/c/Program\ Files/LLVM/bin/clang.exe"
          export TMPDIR="."
          export OS_ARCH="WINNT"
          export M4=m4
          export AWK=awk
          export MOZTOOLS_PATH='C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
          export AUTOCONF="C:/mozilla-build/msys/local/bin/autoconf-2.13"
          echo envs $M4
          export M4=`which m4`
          echo paths $M4
          export AWK=`which awk`
          env
          echo path $PATH
          export PATH="/mnt/c/Program\ Files/LLVM/bin:$MOZTOOLS_PATH:$PATH"
          echo path $PATH
        
    - name: more ubu stuff
      run: apt install -y m4 wget
        
    - name: find m4
      run: |
          export PYTHON="/mnt/c/Program\ Files\Python\ 3.7\python3.exe"
          export AC_MACRODIR=/mnt/c/Relax/firefox-91.3.0/build/autoconf/
          export CC_TYPE=clang
          export CC="/mnt/c/Program\ Files/LLVM/bin/clang.exe"
          export CLANG_CC="/mnt/c/Program\ Files/LLVM/bin/clang.exe"
          export TMPDIR="."
          export OS_ARCH="WINNT"
          export M4=m4
          export AWK=awk
          export MOZTOOLS_PATH='C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
          export AUTOCONF="C:/mozilla-build/msys/local/bin/autoconf-2.13"
          echo envs $M4
          export M4=`which m4`
          echo paths $M4
          export AWK=`which awk`
          env
          echo path $PATH
          export PATH="/mnt/c/Program\ Files/LLVM/bin:$MOZTOOLS_PATH:$PATH"
          echo path $PATH

    - name: choco
      run: choco install visualstudio2017community pkgconfiglite

    - name: Install deps on windows
      shell: powershell
      run: |
        Start-BitsTransfer -Source https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe -Destination ./MozillaBuildSetup.exe
        .\MozillaBuildSetup.exe /S | Out-Null

    - uses: actions/checkout@v2
          
    - name: moz-compile automake
      continue-on-error: true
      run: |
          export PYTHON="/mnt/c/Program\ Files\Python\ 3.7\python3.exe"
          export AC_MACRODIR=`pwd`/build/autoconf/          
          export CC_TYPE=clang
          export CC="/mnt/c/LLVM/bin/clang.exe"
          export CLANG_CC="/mnt/c/Program\ Files/LLVM/bin/clang.exe"
          export TMPDIR="."
          export OS_ARCH="WINNT"
          export M4=m4
          export AWK=awk
          export MOZTOOLS_PATH='C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
          export AUTOCONF="C:/mozilla-build/msys/local/bin/autoconf-2.13"
          export PATH="/mnt/c/LLVM/bin:$PATH"
          env
          echo got `which m4`
          echo got `which awk`
          cd js/src
          sh ../../build/autoconf/autoconf.sh --localdir=$PWD configure.in > configure
          
    - name: moz-compile setup
      continue-on-error: true
      run: |
          mkdir moz-js
          cd js/src
          chmod +x configure
          mkdir _build
          ln -s /mnt/c/Program\ Files/LLVM /mnt/c/LLVM

    - name: conf mozjs
      working-directory: js\src\_build
      shell: python
      env:
        SRCDIR: ${ github.workspace}\js\src
        OLD_CONFIGURE: ${ github.workspace }\js\src\old-configure
        TOPSRCDIR: ${ github.workspace }
        M4: m4
        AWK: awk
        MOZTOOLS_PATH: 'C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
        AUTOCONF: "C:/mozilla-build/msys/local/bin/autoconf-2.13"
        LIB: "C:\\vcpkg\\installed\\x64-windows\\lib"
        INCLUDE: "C:\\vcpkg\\installed\\x64-windows\\include"
        LIBPATH: "C:\\vcpkg\\installed\\x64-windows\\lib"
        PKG_CONFIG_PATH: "C:\\vcpkg\\installed\\x64-windows\\lib\\pkgconfig"
      run: |
        import subprocess
        import os
        env = os.environ.copy()
        env['PATH']='C:\\LLVM\\bin;'+env['PATH']
        subprocess.run(["python.EXE", "../../../configure.py", "--enable-project=js", "--disable-ctypes", "--disable-jit", "--disable-jemalloc", "--enable-optimize", "--enable-hardening", "--with-intl-api", "--build-backends=Recu
        CC: "C:\\LLVM\\bin\\clang.exe"
        CLANG_CC: "C:\\Program\ Files\\LLVM\\bin\\clang.exe"rsiveMake", "--with-visual-studio-version=2017", "--with-system-icu", "--disable-debug", "--enable-gczeal", "--target=x86_64-pc-mingw32", "--host=x86_64-pc-mingw32", "--prefix=/c/relax/vcpkg/installed/x64-windows"], env=env)


    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
